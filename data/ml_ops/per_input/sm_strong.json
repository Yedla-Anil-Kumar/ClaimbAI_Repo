{
  "agent": "ml_ops",
  "inputs_summary": {
    "present": [
      "mlflow_experiment_completeness",
      "mlflow_best_run_trend",
      "mlflow_reproducibility",
      "sm_endpoint_slo_scaling",
      "sm_pipeline_stats",
      "sm_experiments_lineage",
      "sm_clarify_coverage",
      "sm_cost_efficiency",
      "cicd_deploy_frequency",
      "cicd_lead_time",
      "cicd_change_failure_rate",
      "cicd_policy_gates",
      "cicd_artifact_lineage"
    ],
    "declared_slo": {
      "availability": 0.995,
      "p95_ms": 300,
      "error_rate": 0.01
    },
    "policy_required_checks": [
      "pytest",
      "integration-tests",
      "bandit",
      "trivy",
      "bias_check",
      "data_validation"
    ]
  },
  "aimri_scores": {
    "1_technical_infrastructure": {
      "overall": null,
      "subs": {}
    },
    "2_data_management_quality": {
      "overall": null,
      "subs": {}
    },
    "3_ai_ml_capabilities": {
      "overall": 3.34,
      "subs": {
        "3_1_model_development": 3.2,
        "3_2_production_deployment": 3.8,
        "3_3_mlops_maturity": 2.8,
        "3_4_model_governance": 2.65,
        "3_5_advanced_capabilities": 4.4
      }
    },
    "4_talent_skills": {
      "overall": null,
      "subs": {}
    },
    "5_governance_ethics": {
      "overall": null,
      "subs": {}
    },
    "6_strategic_alignment": {
      "overall": null,
      "subs": {}
    },
    "7_cultural_readiness": {
      "overall": null,
      "subs": {}
    },
    "8_process_maturity": {
      "overall": 4.0,
      "subs": {
        "8_1_project_management": null,
        "8_2_documentation_practices": null,
        "8_3_quality_assurance": 4.0,
        "8_4_operational_excellence": 4.0,
        "8_5_measurement_metrics": null
      }
    },
    "9_foundation_model_ops": {
      "overall": null,
      "subs": {}
    },
    "10_generative_ai_capabilities": {
      "overall": null,
      "subs": {}
    },
    "11_responsible_ai_social_impact": {
      "overall": null,
      "subs": {}
    },
    "12_ai_business_value_roi": {
      "overall": null,
      "subs": {}
    },
    "13_ai_risk_resilience": {
      "overall": null,
      "subs": {}
    },
    "14_ai_ecosystem_external_integration": {
      "overall": null,
      "subs": {}
    },
    "15_ai_leadership_vision": {
      "overall": null,
      "subs": {}
    }
  },
  "metric_breakdown": {
    "mlflow.experiment_completeness_band": {
      "metric_id": "mlflow.experiment_completeness_band",
      "band": 4,
      "rationale": "All fields are above 0.80, with four fields at or above 0.90, but pct_all at 0.88 limits the score to 4.",
      "flags": [],
      "gaps": [
        "Increase pct_all to \u22650.90"
      ]
    },
    "mlflow.lineage_coverage_band": {
      "metric_id": "mlflow.lineage_coverage_band",
      "band": 1,
      "rationale": "All fields are missing, which critically limits the assessment of lineage coverage.",
      "flags": [],
      "gaps": [
        "Provide pct_git_sha, pct_data_ref, and pct_env_files data"
      ]
    },
    "mlflow.experiment_velocity_band": {
      "metric_id": "mlflow.experiment_velocity_band",
      "band": 5,
      "rationale": "Both the improvement rate and the number of experiments per week exceed the top thresholds, indicating strong performance in experimentation and improvement.",
      "flags": [],
      "gaps": []
    },
    "mlflow.registry_hygiene_band": {
      "metric_id": "mlflow.registry_hygiene_band",
      "band": 1,
      "rationale": "All evidence fields are missing, which is critical for assessment. Without this data, it is impossible to evaluate the performance against the policy requirements.",
      "flags": [],
      "gaps": [
        "Provide pct_staged, pct_with_approver, median_stage_latency_h, and rollback_count_30d data"
      ]
    },
    "mlflow.validation_artifacts_band": {
      "metric_id": "mlflow.validation_artifacts_band",
      "band": 1,
      "rationale": "All metrics are below the threshold of 0.60, indicating critical issues with coverage and reporting.",
      "flags": [],
      "gaps": [
        "Increase all metrics (SHAP, bias report, validation JSON) to at least 0.60"
      ]
    },
    "mlflow.reproducibility_band": {
      "metric_id": "mlflow.reproducibility_band",
      "band": 4,
      "rationale": "The match rate is strong at 0.92, indicating good reproducibility, and there are no conflicts present. However, it falls short of the excellent threshold of 0.95.",
      "flags": [],
      "gaps": [
        "Increase match rate to 0.95 or higher"
      ]
    },
    "aml.endpoint_slo_band": {
      "metric_id": "aml.endpoint_slo_band",
      "band": 5,
      "rationale": "All three metrics exceed the declared SLO with healthy margins, indicating excellent performance.",
      "flags": [],
      "gaps": []
    },
    "aml.jobs_flow_band": {
      "metric_id": "aml.jobs_flow_band",
      "band": 1,
      "rationale": "All metrics are below acceptable thresholds, indicating a generally failing state. Success rate is significantly low, and both lead time and p95 duration exceed acceptable limits.",
      "flags": [],
      "gaps": [
        "Increase success_rate to \u22650.90",
        "Reduce lead_time to \u226424h",
        "Decrease p95_duration_min to \u226060"
      ]
    },
    "aml.monitoring_coverage_band": {
      "metric_id": "aml.monitoring_coverage_band",
      "band": 1,
      "rationale": "Monitors are disabled, indicating a lack of proactive monitoring and response processes. This critical limitation severely impacts the overall effectiveness of the monitoring system.",
      "flags": [],
      "gaps": [
        "Enable monitoring systems to allow for alerting and response.",
        "Establish a response process to address potential issues."
      ]
    },
    "aml.registry_governance_band": {
      "metric_id": "aml.registry_governance_band",
      "band": 4,
      "rationale": "All fields are above 0.80 and median transition time is below 72 hours.",
      "flags": [],
      "gaps": [
        "Increase pct_staged and pct_with_approvals to 0.90 for band 5",
        "Reduce median transition time below 48 hours for band 5"
      ]
    },
    "aml.cost_correlation_band": {
      "metric_id": "aml.cost_correlation_band",
      "band": 5,
      "rationale": "The cost join rate is excellent at 0.93, and the coverage includes both tags and resourceId, indicating robust attribution. Additionally, the cost per 1k requests is low, supporting effective cost management.",
      "flags": [],
      "gaps": []
    },
    "sm.endpoint_slo_scaling_band": {
      "metric_id": "sm.endpoint_slo_scaling_band",
      "band": 5,
      "rationale": "The metrics demonstrate excellent availability, low error rate, and fast response times, all well within the thresholds for a band 5 rating. The max RPS at SLO is also strong, providing ample capacity.",
      "flags": [],
      "gaps": []
    },
    "sm.pipeline_flow_band": {
      "metric_id": "sm.pipeline_flow_band",
      "band": 4,
      "rationale": "Success rate is strong at 0.96, and the retry rate is acceptable at 0.03. However, the p95 duration of 42 minutes exceeds the threshold for band 4.",
      "flags": [],
      "gaps": [
        "Reduce p95_duration_min to \u226445 minutes for band 5"
      ]
    },
    "sm.experiments_lineage_band": {
      "metric_id": "sm.experiments_lineage_band",
      "band": 4,
      "rationale": "All metrics are above 0.85, with two metrics above 0.90, indicating good performance overall. The single biggest limiter is the pct_code_ref, which is just below the threshold for band 5. ",
      "flags": [],
      "gaps": [
        "Improve pct_code_ref to \u22650.95 for band 5"
      ]
    },
    "sm.clarify_coverage_band": {
      "metric_id": "sm.clarify_coverage_band",
      "band": 4,
      "rationale": "Both metrics are above 0.80, indicating good coverage in bias reporting and explainability. However, neither metric meets the higher threshold of 0.90, which prevents a higher band rating.",
      "flags": [],
      "gaps": [
        "Increase both bias_report and explainability coverage to \u22650.90"
      ]
    },
    "sm.cost_efficiency_band": {
      "metric_id": "sm.cost_efficiency_band",
      "band": 5,
      "rationale": "The cost per 1k inferences is low, training costs are efficient, GPU memory headroom is within the optimal range, and the idle ratio is below 20%.",
      "flags": [],
      "gaps": []
    },
    "cicd.deploy_frequency_band": {
      "metric_id": "cicd.deploy_frequency_band",
      "band": 4,
      "rationale": "The overall frequency of 3.6 deployments per week indicates a good level of activity, and with 4 services, this translates to approximately 0.9 deployments per service per week. However, this is just below the threshold for a higher band, as it does not meet the weekly cadence per service requirement.",
      "flags": [],
      "gaps": [
        "Increase the frequency of deployments to achieve at least 1 per week per service."
      ]
    },
    "cicd.lead_time_band": {
      "metric_id": "cicd.lead_time_band",
      "band": 4,
      "rationale": "p50 is 5.5h, which is within the 8h limit, and p95 is 20h, which is within the 24h limit, fitting band 4 criteria. The strongest positives are that both metrics are below their respective thresholds for this band. The biggest limiter is the p50 being above 4h, which prevents a higher band.",
      "flags": [],
      "gaps": [
        "Lower p50 to \u22644h for band 5"
      ]
    },
    "cicd.change_failure_rate_band": {
      "metric_id": "cicd.change_failure_rate_band",
      "band": 4,
      "rationale": "The change failure rate is below 0.20 and the number of rollbacks is low at 1, indicating good performance. However, the CFR is slightly above the threshold for an excellent rating.",
      "flags": [],
      "gaps": [
        "Reduce CFR to below 0.15 for a higher band."
      ]
    },
    "cicd.policy_gates_band": {
      "metric_id": "cicd.policy_gates_band",
      "band": 4,
      "rationale": "All required checks are present, with integration-tests being flaky but ultimately passing after a retry.",
      "present": [
        "pytest",
        "integration-tests",
        "bandit",
        "trivy",
        "bias_check",
        "data_validation"
      ],
      "missing": [],
      "failing": [
        "integration-tests"
      ],
      "gaps": [
        "Improve stability of integration-tests to avoid flakiness"
      ]
    },
    "cicd.artifact_lineage": {
      "metric_id": "cicd.artifact_lineage",
      "integrity_ok": true,
      "mismatches": []
    }
  },
  "mode": "single_inputs_json"
}