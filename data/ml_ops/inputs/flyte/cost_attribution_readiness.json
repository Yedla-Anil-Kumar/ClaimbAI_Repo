{
  "metric_id": "cost_attribution_readiness_band",
  "evidence": {
    "tag_keys_detected": [
      "![](https",
      "\"@type\"",
      "**Note**",
      "000-core.yaml",
      "001-plugins.yaml",
      "002-database.yaml",
      "003-storage.yaml",
      "012-database-secrets.yaml",
      "013-storage-secrets.yaml",
      "100-inline-config.yaml",
      "<a href=\\http",
      "Async Cache->Grpc API Server",
      "BASE_URL",
      "BigQuery->Grpc API Server",
      "CONFIG_DIR",
      "Cons",
      "FLYTE_BOT_PAT",
      "FLYTE_BOT_USERNAME",
      "FROM python",
      "GITHUB_TOKEN",
      "GetTask",
      "Grpc API Server->Async Cache",
      "Grpc API Server->BigQuery",
      "Grpc API Server->Propeller",
      "ListAgents",
      "Logger",
      "Propeller->Async Cache",
      "Propeller->Grpc API Server",
      "Pros",
      "REPOSITORY",
      "RUN pip install \"git+https",
      "VERSION",
      "X-Content-Type-Options",
      "aa_namespace.yaml",
      "aab_default_service_account.yaml",
      "ab_project-resource-quota.yaml",
      "ab_project_resource_quota.yaml",
      "access-key",
      "accessModes",
      "access_key_id",
      "access_log_path",
      "accountId",
      "activeDeadlineSeconds",
      "add-one-and-print",
      "add-one-and-print-0",
      "add-one-and-print-1",
      "add-one-and-print-2",
      "add-one-and-print-3",
      "addr",
      "address",
      "admin",
      "admin.yaml",
      "affinity",
      "alb.ingress.kubernetes.io/group.name",
      "alb.ingress.kubernetes.io/listen-ports",
      "alb.ingress.kubernetes.io/scheme",
      "alb.ingress.kubernetes.io/tags",
      "alb.ingress.kubernetes.io/target-type",
      "allowCors",
      "allowPrivilegeEscalation",
      "allowedHeaders",
      "allowedOrigins",
      "annotations",
      "apiGroup",
      "apiVersion",
      "app",
      "app.kubernetes.io/component",
      "app.kubernetes.io/instance",
      "app.kubernetes.io/managed-by",
      "app.kubernetes.io/name",
      "app.kubernetes.io/version",
      "appAuth",
      "application",
      "arch",
      "args",
      "async def create(self)",
      "async def delete(self)",
      "async def delete_res(resource_id",
      "async def poll(resource_id",
      "async def poll(self)",
      "attributes",
      "auth",
      "auth-type",
      "auth_type",
      "authorizedUris",
      "automountServiceAccountToken",
      "backend",
      "base-delay",
      "baseUrl",
      "batch-size",
      "batching-interval",
      "bin",
      "bindings",
      "blob",
      "blobdescriptor",
      "body",
      "build-docker-images",
      "burst",
      "cache",
      "capabilities",
      "capacity",
      "catalog-cache",
      "catalog.yaml",
      "cert-manager.io/issuer",
      "certDir",
      "chart",
      "checksum/cluster-resource-templates",
      "checksum/config",
      "checksum/configuration",
      "checksum/configuration-secret",
      "checksum/credentials-secret",
      "checksum/secret",
      "chown -R 1001",
      "chown 1001",
      "claimName",
      "class BackendPluginBase",
      "clientId",
      "clientSecretLocation",
      "client_secret",
      "cloud.google.com/app-protocols",
      "cloudwatch-enabled",
      "cloudwatch-log-group",
      "cloudwatch-region",
      "cluster",
      "clusterConfigs",
      "clusterIP",
      "cluster_name",
      "cluster_resources",
      "cluster_resources.yaml",
      "clusters",
      "clusters.yaml",
      "co-pilot",
      "codec_type",
      "collection",
      "collectionType",
      "command",
      "component",
      "config",
      "config.yml",
      "configChecksum",
      "configMap",
      "connect_timeout",
      "connection",
      "connections",
      "connector-service",
      "container",
      "container_array",
      "containers",
      "copilot.yaml",
      "core.yaml",
      "coreIdentity",
      "cpu",
      "create-flyteworkflow-crd",
      "creationTimestamp",
      "customData",
      "data",
      "dataCatalog",
      "database",
      "datacatalog",
      "date_triggered",
      "datetime",
      "db.yaml",
      "dbname",
      "debug",
      "def CreateTask(self, request",
      "def DeleteTask(self, request",
      "def GetTask(self, request",
      "def __init__(self, task_type",
      "def create(task_info",
      "def task_type(self) -> str",
      "def version(self) -> str",
      "default-cpus",
      "default-env-vars",
      "default-for-task-types",
      "default-memory",
      "defaultConnector",
      "defaultTimeout",
      "defaults",
      "defaults.yaml",
      "delete-cluster",
      "description",
      "development.integration",
      "dimensionality",
      "disable-ssl",
      "disableClusterResourceManager",
      "disableScheduler",
      "disableWebhook",
      "disable_ssl",
      "disabled",
      "dnsPolicy",
      "domain",
      "domain.yaml",
      "domains",
      "downstream-eval-duration",
      "drop",
      "durationMinutes",
      "echo",
      "eks.amazonaws.com/role-arn",
      "elif resp.state == \"failure\"",
      "elif resp.state == \"running\"",
      "emailer",
      "emptyDir",
      "enable-admin-launcher",
      "enable-multicontainer",
      "enabled",
      "enabled-plugins",
      "enabled_plugins.yaml",
      "end-node",
      "endpoint",
      "endpoints",
      "env",
      "envFrom",
      "envoy.yaml",
      "ephemeral-storage",
      "ephemeralStorage",
      "event",
      "eventScheduler",
      "eventVersion",
      "exec",
      "execution-id",
      "executionQueues",
      "externalName",
      "externalTrafficPolicy",
      "failureThreshold",
      "fetch-depth",
      "fieldPath",
      "fieldRef",
      "fields",
      "files",
      "filter_chains",
      "finalizers",
      "flyte",
      "flyteClient",
      "flyteadmin",
      "fsGroup",
      "fsGroupChangePolicy",
      "gc-interval",
      "generate-tags",
      "generateName",
      "github-token",
      "gpu",
      "group",
      "grpc",
      "grpcMaxRecvMsgSizeMBs",
      "grpcPort",
      "grpcServerReflection",
      "haSharedSecret",
      "hard",
      "headers",
      "health",
      "heartbeat-grace-period-multiplier",
      "helm-release",
      "helm.sh/chart",
      "heritage",
      "homepage",
      "host",
      "hostIPC",
      "hostNetwork",
      "hostPath",
      "hosts",
      "http",
      "http2_protocol_options",
      "httpGet",
      "httpPort",
      "http_filters",
      "iam.amazonaws.com/permitted",
      "iam.gke.io/gcp-service-account",
      "iamRole",
      "id",
      "if resp.state == \"success\"",
      "image",
      "imagePullPolicy",
      "imagePullSecrets",
      "in_blob",
      "ingressClassName",
      "inherited",
      "initContainers",
      "initialDelaySeconds",
      "inputBindings",
      "input_bindings",
      "inputs",
      "insecure",
      "integer",
      "interface",
      "interval",
      "items",
      "jobs",
      "json",
      "k8s",
      "k8s-array",
      "k8s.yaml",
      "key",
      "kind",
      "kube-client-config",
      "kube-config",
      "kubernetes-enabled",
      "kubernetes-template-uri",
      "kubernetes.io/cluster-service",
      "kubernetes.io/ingress.class",
      "labelClusterMap",
      "labelSelector",
      "lb_policy",
      "leader-election",
      "lease-duration",
      "level",
      "limit-namespace",
      "limits",
      "limits.cpu",
      "limits.memory",
      "linting",
      "listeners",
      "literal-offloading-config",
      "literals",
      "livenessProbe",
      "load_assignment",
      "localCert",
      "lock-config-map",
      "log",
      "logger",
      "logger.yaml",
      "logs",
      "manager",
      "manifest-release",
      "matchLabels",
      "matrix",
      "max-delay",
      "max-reservation-heartbeat",
      "max-workflow-retries",
      "maxDownloadMBs",
      "maxReplicas",
      "maxSurge",
      "maxUnavailable",
      "max_size_mbs",
      "memory",
      "metadata",
      "metadata-prefix",
      "metadataStoragePrefix",
      "metrics",
      "metrics-prefix",
      "metrics-scope",
      "metricsScope",
      "minReadySeconds",
      "minReplicas",
      "mountPath",
      "multi_blob",
      "my-key",
      "name",
      "names",
      "namespace",
      "namespace.yaml",
      "namespace_config.yaml",
      "namespace_mapping",
      "needs",
      "nginx.ingress.kubernetes.io/app-root",
      "nodeAffinity",
      "nodeId",
      "nodePort",
      "nodeSelector",
      "nodes",
      "notifications",
      "number",
      "on",
      "onFailure",
      "openAPIV3Schema",
      "openId",
      "options",
      "os",
      "out",
      "out_blob",
      "outputs",
      "overrides",
      "owner",
      "pass.txt",
      "password",
      "passwordPath",
      "path",
      "pathType",
      "path_redirect",
      "paths",
      "periodSeconds",
      "persistentVolumeClaim",
      "phase",
      "platforms",
      "plugins",
      "plural",
      "pod-application",
      "pod-template-container-name",
      "pod-template-name",
      "podAffinity",
      "podAntiAffinity",
      "port",
      "port_value",
      "ports",
      "postgres",
      "postgres-password",
      "prefix",
      "prefix_rewrite",
      "primitive",
      "print-every-time",
      "print-every-time-0",
      "priorityClassName",
      "privileged",
      "processor",
      "prof-port",
      "profiler-port",
      "profilerPort",
      "project",
      "project_id",
      "projectcontour.io/upstream-protocol.h2c",
      "projected",
      "prometheus",
      "prometheus.io/path",
      "prometheus.io/port",
      "prometheus.io/scrape",
      "promise",
      "propeller",
      "properties",
      "protocol",
      "proxyPassword",
      "proxyUsername",
      "publish-flyte-binary-image",
      "publish-flyte-component-image",
      "publishNotReadyAddresses",
      "publisher",
      "push",
      "qps",
      "qubolespark",
      "queue",
      "queueName",
      "queues",
      "rate",
      "rawoutput-prefix",
      "readOnly",
      "readOnlyRootFilesystem",
      "readinessProbe",
      "reconnectAttempts",
      "reconnectDelaySeconds",
      "redirect",
      "redirectUri",
      "ref",
      "refreshInterval",
      "region",
      "registry",
      "release",
      "remoteData",
      "remoteData.yaml",
      "renew-deadline",
      "replicas",
      "repo",
      "requests",
      "required",
      "resourceNames",
      "resource_manager.yaml",
      "resourcemanager",
      "resources",
      "retry-period",
      "return {\"job_id\"",
      "return {\"job_spec\"",
      "roleNameKey",
      "roleRef",
      "rollingUpdate",
      "root-password",
      "root-user",
      "route",
      "route_config",
      "routes",
      "rules",
      "run",
      "runAsGroup",
      "runAsNonRoot",
      "runAsUser",
      "runScheduler",
      "runs-on",
      "runtime",
      "scalar",
      "scaleTargetRef",
      "scheduleNamePrefix",
      "scheduleQueueName",
      "scheduleRole",
      "scheduler",
      "scheduler.yaml",
      "schema",
      "scheme",
      "scope",
      "scopes",
      "script",
      "seLinuxOptions",
      "seccompProfile",
      "secret",
      "secret-key",
      "secretKeyRef",
      "secretName",
      "secret_key",
      "secrets",
      "secure",
      "security",
      "securityContext",
      "seedProjects",
      "seedProjectsWithDetails",
      "selector",
      "sender",
      "served",
      "server",
      "server.yaml",
      "service",
      "serviceAccountName",
      "serviceName",
      "servicePort",
      "sessionAffinity",
      "sha",
      "shell",
      "shortDescription",
      "shortNames",
      "show-source",
      "sidecar",
      "signedURL",
      "signedUrls",
      "simple",
      "singular",
      "socket_address",
      "source",
      "sourcePath",
      "sourceType",
      "sources",
      "sparkonk8s",
      "spec",
      "stackdriver-enabled",
      "stackdriver-logresourcename",
      "standaloneDeployment",
      "start-node",
      "start-timeout",
      "stat_prefix",
      "static_resources",
      "status",
      "steps",
      "storage",
      "storage-prefix",
      "storage.yaml",
      "storageClassName",
      "storagedriver",
      "stow",
      "stowConfigOverride",
      "strategy",
      "stringData",
      "sub-queue",
      "subject",
      "subjects",
      "subsets",
      "successThreshold",
      "sum-and-print",
      "sum-and-print-0",
      "sum-non-none",
      "sum-non-none-0",
      "targetName",
      "targetPort",
      "target_gc_percent",
      "task",
      "task-plugins",
      "taskResources",
      "task_logs.yaml",
      "task_ref",
      "task_resource_defaults.yaml",
      "task_resources",
      "task_type_whitelist",
      "tasks",
      "tcpSocket",
      "template",
      "templatePath",
      "terminationMessagePolicy",
      "testing",
      "thirdPartyConfig",
      "threshold",
      "timeout",
      "timeoutSeconds",
      "timeouts",
      "tls",
      "to",
      "token",
      "topicName",
      "topologyKey",
      "topologySpreadConstraints",
      "triggered_date",
      "type",
      "typed_config",
      "updateStrategy",
      "upgrade_configs",
      "useAuth",
      "userAuth",
      "username",
      "uses",
      "v2_signing",
      "value",
      "valueFrom",
      "value_to_print",
      "values_to_add",
      "values_to_print",
      "var",
      "variables",
      "verbs",
      "version",
      "versions",
      "virtual_hosts",
      "volumeMounts",
      "volumeName",
      "volumes",
      "webhook",
      "weight",
      "with",
      "workers",
      "workflow",
      "workflow-id",
      "workflow-reeval-duration",
      "workflow.apiVersion",
      "workflowConfigs",
      "workflowExecutionConfig",
      "workflowExecutor",
      "workflowName",
      "workflow_dispatch",
      "x-kubernetes-preserve-unknown-fields",
      "xargs -r chown -R 1001",
      "{ \"Protocol\"",
      "{{- $roleType",
      "{{addURIAndSha \"https"
    ],
    "missing_required": [
      "model",
      "endpoint_id"
    ],
    "sample_lines": []
  },
  "rubric": {
    "5": "all required keys present and consistent",
    "4": "most keys present",
    "3": "some present",
    "2": "few present",
    "1": "none"
  }
}