# Kubeflow Pipelines: DSL + compiled YAML + scheduling hints

from kfp import dsl

@dsl.component
def preprocess_op(data_path: str) -> str:
    return data_path + "/prepared"

@dsl.component
def train_op(dataset: str) -> str:
    return "gs://acme/models/credit-risk/1"

@dsl.pipeline(name="credit-risk-pipeline")
def credit_pipeline(data_path: str = "gs://acme/data"):
    prepared = preprocess_op(data_path)
    model_uri = train_op(prepared.output)

# Compiled manifest (already in repo): compiled/credit-pipeline.yaml
# Argo CronWorkflow (schedules nightly) referencing compiled pipeline
# CI compiles with kfp.compiler and uploads to KFP on merge to main
