# SageMaker via SDK, boto3, and pipelines + registry + endpoints

import boto3
from sagemaker.sklearn import SKLearn
from sagemaker.workflow.pipeline import Pipeline
from sagemaker.workflow.steps import TrainingStep
from sagemaker.model import Model
from sagemaker.workflow.parameters import ParameterInteger

sess = boto3.session.Session()
sm = sess.client("sagemaker")

est = SKLearn(entry_point="train.py", role="arn:aws:iam::123:role/ML", framework_version="1.2-1")
train_step = TrainingStep(name="Train", estimator=est, inputs={"train": "s3://acme/data/train"})

pipe = Pipeline(
    name="credit-risk-pipeline",
    parameters=[ParameterInteger(name="epochs", default_value=10)],
    steps=[train_step],
)

# Registry usage
sm.create_model_package_group(ModelPackageGroupName="credit-risk-registry", ModelPackageGroupDescription="prod models")

# Endpoint (boto3 path)
sm.create_endpoint_config(
  EndpointConfigName="credit-risk-epc",
  ProductionVariants=[{"ModelName": "credit-risk-model", "InstanceType": "ml.m5.large", "InitialInstanceCount": 2}]
)
sm.create_endpoint(EndpointName="credit-risk", EndpointConfigName="credit-risk-epc")

# Ops hints: CloudWatch logs, EventBridge nightly schedule, CodeBuild in CodePipeline
